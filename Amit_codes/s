package ex2.ex2;

import ex2.gui.GUIShape;
import ex2.gui.GUI_Shape;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.util.*;

/**
 * This class represents a collection of GUI_Shape.
 * Ex2: you should implement this class!
 * @author I2CS
 *
 */
public class ShapeCollection implements GUI_Shape_Collection {
	private ArrayList<GUI_Shape> _shapes;

	public ShapeCollection() {
		_shapes = new ArrayList<GUI_Shape>();
	}

	@Override
	public GUI_Shape get(int i) {
		return _shapes.get(i);
	}

	@Override
	public int size() {
		return _shapes.size();
	}

	@Override
	public GUI_Shape removeElementAt(int i) {
		if (i >= 0 && i < _shapes.size()) {
			return _shapes.remove(i);
		} else {
			return null;
		}
	}

	@Override
	public void addAt(GUI_Shape s, int i) {
		_shapes.add(i, s);
	}

	@Override
	public void add(GUI_Shape s) {
		if (s != null && s.getShape() != null) {
			_shapes.add(s);
		}
	}

	@Override
	public GUI_Shape_Collection copy() {
		ShapeCollection copyCollection = new ShapeCollection();
		for (GUI_Shape shape : _shapes) {
			copyCollection.add(shape.copy());
		}
		return copyCollection;
	}

	@Override
	public void sort(Comparator<GUI_Shape> comp) {
		Collections.sort(_shapes, comp);
	}

	@Override
	public void removeAll() {
		_shapes.clear();
	}

	@Override
	public void save(String file) {

	}

	@Override
	public void load(String file) {
		try (Scanner scanner = new Scanner(new File(file))) {
			int i=0;
			while (scanner.hasNextLine() && i<_shapes.size()) {
				String line = scanner.nextLine().trim();
				if (!line.isEmpty()) {
					_shapes.add(new GUIShape(line));
				}
			}
		} catch (FileNotFoundException e) {
			System.err.println("File not found: " + file);
		}
	}
